// Spacing Design Tokens
// Trade FX Replay - 4px grid-based spacing system

// Base spacing scale (4px grid)
:root {
  --space-0: 0;
  --space-1: 0.25rem;   // 4px
  --space-2: 0.5rem;    // 8px
  --space-3: 0.75rem;   // 12px
  --space-4: 1rem;      // 16px
  --space-5: 1.25rem;   // 20px
  --space-6: 1.5rem;    // 24px
  --space-8: 2rem;      // 32px
  --space-10: 2.5rem;   // 40px
  --space-12: 3rem;     // 48px
  --space-16: 4rem;     // 64px
  --space-20: 5rem;     // 80px
  --space-24: 6rem;     // 96px
  --space-32: 8rem;     // 128px
}

// Component-specific spacing
:root {
  --spacing-component-xs: var(--space-2);    // 8px - Tight spacing
  --spacing-component-sm: var(--space-4);    // 16px - Default small
  --spacing-component-md: var(--space-6);    // 24px - Default medium
  --spacing-component-lg: var(--space-8);    // 32px - Large spacing
  --spacing-component-xl: var(--space-12);   // 48px - Section spacing
}

// Touch target sizes (for mobile accessibility)
:root {
  --touch-target-minimum: 44px;    // iOS/Android minimum
  --touch-target-comfortable: 48px; // Comfortable size
  --touch-target-large: 56px;      // Large touch area
}

// Layout spacing
:root {
  --container-padding: var(--space-4);     // 16px - Mobile container padding
  --container-padding-lg: var(--space-6);  // 24px - Desktop container padding
  --section-spacing: var(--space-12);      // 48px - Between major sections
  --card-padding: var(--space-4);          // 16px - Internal card padding
  --form-spacing: var(--space-6);          // 24px - Between form groups
}

// Border radius
:root {
  --radius-none: 0;
  --radius-sm: 0.125rem;    // 2px
  --radius-md: 0.375rem;    // 6px
  --radius-lg: 0.5rem;      // 8px
  --radius-xl: 0.75rem;     // 12px
  --radius-2xl: 1rem;       // 16px
  --radius-3xl: 1.5rem;     // 24px
  --radius-full: 9999px;    // Pill/circle shape
}

// SCSS Maps for programmatic use
$spacing: (
  '0': var(--space-0),
  '1': var(--space-1),
  '2': var(--space-2),
  '3': var(--space-3),
  '4': var(--space-4),
  '5': var(--space-5),
  '6': var(--space-6),
  '8': var(--space-8),
  '10': var(--space-10),
  '12': var(--space-12),
  '16': var(--space-16),
  '20': var(--space-20),
  '24': var(--space-24),
  '32': var(--space-32)
);

$component-spacing: (
  'xs': var(--spacing-component-xs),
  'sm': var(--spacing-component-sm),
  'md': var(--spacing-component-md),
  'lg': var(--spacing-component-lg),
  'xl': var(--spacing-component-xl)
);

$border-radius: (
  'none': var(--radius-none),
  'sm': var(--radius-sm),
  'md': var(--radius-md),
  'lg': var(--radius-lg),
  'xl': var(--radius-xl),
  '2xl': var(--radius-2xl),
  '3xl': var(--radius-3xl),
  'full': var(--radius-full)
);

$touch-targets: (
  'minimum': var(--touch-target-minimum),
  'comfortable': var(--touch-target-comfortable),
  'large': var(--touch-target-large)
);

// Utility functions
@function spacing($size) {
  @return map-get($spacing, $size);
}

@function component-spacing($size) {
  @return map-get($component-spacing, $size);
}

@function border-radius($size) {
  @return map-get($border-radius, $size);
}

@function touch-target($size) {
  @return map-get($touch-targets, $size);
}

// Spacing mixins for common patterns
@mixin container-padding {
  padding-left: var(--container-padding);
  padding-right: var(--container-padding);
  
  @media (min-width: 1024px) {
    padding-left: var(--container-padding-lg);
    padding-right: var(--container-padding-lg);
  }
}

@mixin section-spacing {
  margin-top: var(--section-spacing);
  margin-bottom: var(--section-spacing);
}

@mixin card-spacing {
  padding: var(--card-padding);
}

@mixin form-group-spacing {
  margin-bottom: var(--form-spacing);
  
  &:last-child {
    margin-bottom: 0;
  }
}

// Touch-friendly button mixin
@mixin touch-target($size: 'comfortable') {
  min-height: touch-target($size);
  min-width: touch-target($size);
  display: inline-flex;
  align-items: center;
  justify-content: center;
}

// Stack spacing utility (for vertical spacing between elements)
@mixin stack($gap: var(--space-4)) {
  display: flex;
  flex-direction: column;
  gap: $gap;
}

// Inline spacing utility (for horizontal spacing between elements)
@mixin inline($gap: var(--space-4)) {
  display: flex;
  align-items: center;
  gap: $gap;
}